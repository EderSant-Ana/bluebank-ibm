/*
Hibernate: 
    
    drop table if exists tb_clientes CASCADE 
Hibernate: 
    
    drop table if exists tb_conta CASCADE 
Hibernate: 
    
    drop table if exists tb_enderecos CASCADE 
Hibernate: 
    
    drop table if exists tb_telefones CASCADE 
Hibernate: 
    
    create table tb_clientes (
       cliente_id integer generated by default as identity,
        cpf varchar(255),
        email varchar(255),
        idade integer,
        nome varchar(255),
        renda_mensal decimal(19,2),
        regime_contratacao integer,
        primary key (cliente_id)
    )
Hibernate: 
    
    create table tb_conta (
       id_conta integer generated by default as identity,
        limite_disponivel decimal(19,2),
        cliente_id integer,
        primary key (id_conta)
    )
Hibernate: 
    
    create table tb_enderecos (
       endereco_id integer generated by default as identity,
        bairro varchar(255),
        cep varchar(255),
        cidade varchar(255),
        complemento varchar(255),
        estado varchar(255),
        logradouro varchar(255),
        numero varchar(255),
        cliente_id integer,
        primary key (endereco_id)
    )
Hibernate: 
    
    create table tb_telefones (
       cliente_cliente_id integer not null,
        telefones varchar(255)
    )
Hibernate: 
    
    alter table tb_clientes 
       add constraint UK_bwjcxi7imn35cv71off722dlf unique (nome)
Hibernate: 
    
    alter table tb_conta 
       add constraint FKot08ftx4iu6pbghwwqycxsj0y 
       foreign key (cliente_id) 
       references tb_clientes
Hibernate: 
    
    alter table tb_enderecos 
       add constraint FKtjgooj5176dkbo5n6qv493jxh 
       foreign key (cliente_id) 
       references tb_clientes
Hibernate: 
    
    alter table tb_telefones 
       add constraint FKm9nrfv413aik045g2f2dwq1oo 
       foreign key (cliente_cliente_id) 
       references tb_clientes
       
Query para validar a criação da foreign key de endereços
SELECT * FROM TB_CLIENTES C 
INNER JOIN TB_ENDERECOS E
ON C.CLIENTE_ID = E.CLIENTE_ID
WHERE E.CLIENTE_ID = 3;       
*/

INSERT INTO tb_clientes (cpf, email, idade, nome, regime_contratacao, renda_mensal) VALUES ('999.999.999-99', 'jose@gmail.com', 38, 'José Santos', 2, 0.00);
INSERT INTO tb_clientes (cpf, email, idade, nome, regime_contratacao, renda_mensal) VALUES ('111.111.111-11', 'maria@gmail.com', 36, 'Maria Alves', 0, 10000.00);

INSERT INTO tb_telefones (cliente_cliente_id, telefones) VALUES (1, '11980586008');
INSERT INTO tb_telefones (cliente_cliente_id, telefones) VALUES (1, '11969724155');
INSERT INTO tb_telefones (cliente_cliente_id, telefones) VALUES (2, '11999999999');


INSERT INTO tb_enderecos (bairro, cep, complemento, logradouro, numero, cliente_id, estado, cidade) VALUES ('Jardim das Maravilhas', '09251010', 'Apartamento 1', 'Rua Algeciras', '530', 1, 'SP', 'Santo André');
INSERT INTO tb_enderecos (bairro, cep, complemento, logradouro, numero, cliente_id, estado, cidade) VALUES ('Vila Industrial', '03254240', 'Casa Frente', 'Rua Água Bonita', '230', 2, 'SP', 'São Paulo');

INSERT INTO tb_conta (limite_disponivel, cliente_id) VALUES (600.00, 1);
INSERT INTO tb_conta (limite_disponivel, cliente_id) VALUES (8000.00, 2);
